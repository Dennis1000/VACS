
                  VACS V1.24 assembler summary

                  --   W.H. Taphoorn, 1992   --
                  --  Fidonet 2:500/40.1547  --

Directives: (pseudo opcodes)
------------------------------------------------------------------------------
  PRPROCES  ; Enable pre-processor (default)
  NOPROCES  ; Disable pre-processor (faster if no text replacements used)

  TITLE     ; Define title string for listing
  STITLE    ; Define subtitle string for listing
  OFFS      ; Add offset (+ or -) to loadmodule addressfields
  NAME      ; Define module name
  EJECT     ; Forces new page & header in listing
  PAGELEN   ; Set listing page-length
  LEFTMARG  ; Define listing left margin
  WIDTH     ; Define listing-width
  FOLD      ; Enable folding of lines, longer than WIDTH
  NOFOLD    ; Disable folding
  TABS      ; Define tabstops
  LIST      ; Enable listing output
  NOLIST    ; Disable listing output
  TOCON     ; Write text to console
  TOLIST    ; Write text to listfile
  WARNING   ; Generate user-defined warning
  INCLUDE   ; Read an alternate source file

  IF        ; Start of conditional assembly
  ELSE      ; Alternate start of conditional assembly (optional)
  ENDIF     ; End of conditional assembly

  DB        ; Define memory contents in byte(s)
  DW        ; Define memory contents in word(s)
  DD        ; Define memory contents in double(s)

  BACKWARD  ; Reverse default word-storage sequence
  FORWARD   ; Set word-storage sequence to uP's default

  DS n      ; Define storage area for n bytes
  DS n, v   ; Define storage area for n bytes with value v

  EQU       ; Define alias name for value, opcode or register
  SET       ; Assign numeric- or stringvariable

  GLOBAL    ; Define symbol(s) to be global (external or public)
  SECTION   ; Define new section
  RESUME    ; Continue previous defined section
  ORG       ; Force location counter

  STRING    ; Define string variabele(s)

  END       ; Mark end of source file

Operators:
------------------------------------------------------------------------------
    Literal:
    --------

  '         ; Single quote:       string delimiter
  "         ; Double quote:       string delimiter
  `         ; Back quote:         replacement text delimiter
  ,         ; Comma:              operand delimiter
  :         ; Colon:              optional label suffix
  ;         ; Semicolon:          remark indicator
  >         ; Greater than sign:  label suffix (re-definable label name)
  ^         ; Caret:              un-quotes special characters

    Arithmetic:
    -----------

  (         ; Left Brace:         expression delimiter
  )         ; Right Brace:        
  +         ; Plus:               addition or unary Plus operator
  -         ; Minus:              subtraction or unary Minus operator
  *         ; Asteriks:           multiplication operator
  /         ; Slash:              division operator
  MOD       ;                     modulus operator
  %         ; Percent sign        modulus operator
  /         ; Slash:              unary modulus operator in ORG statements

    Relational:
    -----------
  =         ;                     equal_to operator
  <         ;                     less_than operator
  >         ;                     greater_than operator
  <>        ;                     not_equal_to operator
  <=        ;                     less_than_or_equal_to operator
  >=        ;                     greater_than_or_equal_to operator

    Logical and bitwise:
    -------------------
  \         ; Backslash:          unary NOT operator
  !         ; Exclamation point:  OR operator
  !!        ; Double Excl. point: XOR operator
  &         ; Ampersand:          AND operator
  <<        ;                     shift-left operator
  >>        ;                     shift-right operator

    Section operators:
    ------------------
  ABSOLUTE  ; Section relocation type
  PAGE      ; Section relocation type
  INPAGE    ; Section relocation type

Functions and constants:
-----------------------------------------------------------------

  $         ; Returns current location counter (opcode pointer)
  LO        ; Returns low byte of operand
  HI        ; Returns high byte of low word of operand
  LW        ; Returns low word of operand
  HW        ; Returns high word of operand
  ABS       ; Returns non-negative value of operand
  BASE      ; Returns true if operand is defined in current section
  DEF       ; Returns true if operand is backward defined in sourcefile
  $PASS     ; Read-only variable, holds the current assembly pass (1 or 2)
  $USERn    ; Read-only, set true if commandline holds -n option (n = 1..9)
  $MSUM     ; Read-only, holds the sum of all currently written object bytes.
  `%`       ; Returns current section name
  *         ; Converts next operand into literal 1..11 digit decimal string 
  :         ; Converts next operand into literal 4 digit hex string
  =         ; Converts next operand into literal 8 digit hex string

Assembler Options:
------------------------------------------------------------------
  L <listing file spec>  sends the listing to the given file or device spec.
                         Default extension is '.LST'.
  O <object file spec>   sends the object code to the given file or device
                         spec.  Default extension is '.HEX'.
  E  lists only the lines with errors or warnings in them (does not suppress
     the identifier listing).
  R  appends line number info on error and warning messages in listfile.
  D  sends special format error and warning messages to stdout.
  I  suppresses the identifier listing.
  S  suppresses the generation of an end of file record in the object file.
  M  generates a Motorola S1-S9 format object file.
  T  generates a Tektronix Tekhex format object file.
  N  place (4 digit) line numbers in list file.
  B <n>  set tabstops to every <n>th position (<n> must be from 4 to 20)
  P  suppresses the preprocessor.
  Q  supresses console output (does not affect D option)
  V  generate unused label warning.
  U <text> uP-mode (not on all assemblers).
  W  suppresses special warnings (not on all assemblers).
  1..9 sets user switches 1..9 respectively
